__git_ps1()
{
    local g="$(git rev-parse --git-dir 2>/dev/null)"
    if [ -n "$g" ]; then
        local r
        local b
        if [ -d "$g/rebase-apply" ]
        then
            if test -f "$g/rebase-apply/rebasing"
            then
                r="|REBASE"
            elif test -f "$g/rebase-apply/applying"
            then
                r="|AM"
            else
                r="|AM/REBASE"
            fi
            b="$(git symbolic-ref HEAD 2>/dev/null)"
        elif [ -f "$g/rebase-merge/interactive" ]
        then
            r="|REBASE-i"
            b="$(cat "$g/rebase-merge/head-name")"
        elif [ -d "$g/rebase-merge" ]
        then
            r="|REBASE-m"
            b="$(cat "$g/rebase-merge/head-name")"
        elif [ -f "$g/MERGE_HEAD" ]
        then
            r="|MERGING"
            b="$(git symbolic-ref HEAD 2>/dev/null)"
        else
            if [ -f "$g/BISECT_LOG" ]
            then
                r="|BISECTING"
            fi
            if ! b="$(git symbolic-ref HEAD 2>/dev/null)"
            then
                if ! b="$(git describe --exact-match HEAD 2>/dev/null)"
                then
                    b="$(cut -c1-7 "$g/HEAD")..."
                fi
            fi
        fi

        local top=""
        if [[ "$g" == ".git" ]]; then
            top="${PWD##*/}"
        else
            top="${${g%/.git}##*/}"
        fi

        if [ -n "$1" ]; then
            printf "$1" "${b##refs/heads/}$r"
        else
            printf " (%s:%s)" "${b##refs/heads/}$r" "$top"
        fi
    fi
}
